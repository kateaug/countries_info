{"version":3,"sources":["global.js","themes.js","components/Header/styles.js","components/Header/Header.js","components/Country/styles.js","components/Country/Country.js","components/Search/styles.js","components/Search/Search.js","components/Filter/styles.js","components/Filter/Filter.js","components/Countries/styles.js","components/Spinner/styles.js","components/Spinner/Spinner.js","components/Countries/Countries.js","components/CountryDetail/styles.js","components/CountryDetail/CountryDetail.js","App.js","index.js"],"names":["GlobalStyles","createGlobalStyle","theme","background","black","white","light","name","text","elements","hover","dark","Container","styled","header","Header","toggleThemes","useContext","ThemeContext","to","style","textDecoration","onClick","icon","faSun","faMoon","div","Details","Country","country","alpha3Code","src","flag","className","alt","population","region","capital","Input","input","Search","keyword","setKeyword","onChange","clearInput","faSearch","size","type","placeholder","value","e","target","FilterList","ul","Filter","filterByRegion","useState","selectedRegion","setSelectedRegion","showDropdown","setShowDropdown","faChevronDown","display","map","selectRegion","fontWeight","props","backgroundColor","Options","Grid","Spinner","Countries","setInput","countriesData","setCountriesData","defaultCountriesData","setDefaultCountriesData","loading","setLoading","fetchCountries","a","fetch","then","res","json","data","useEffect","loadCountriesByRegion","updateInput","filtered","filter","toLowerCase","includes","card","Flag","CountryInfo","Borders","CountryDetail","setCountry","useParams","loadCountry","catch","err","console","log","faArrowLeft","nativeName","subregion","topLevelDomain","languages","lang","join","currencies","symbol","borders","length","border","App","stored","localStorage","getItem","isDarkMode","setIsDarkMode","setItem","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.de4589dc.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components';\n\nexport const GlobalStyles = createGlobalStyle`\n  body, #root {\n    background: ${({ theme }) => theme.background};\n    margin: 0;\n    padding: 0;\n  }\n`;\n","const black = '#292929';\nconst lightGrey = '#fcfcfc';\nconst midGrey = '#f2f2f2';\nconst grey = '#525252';\nconst charcoal = '#383838';\nconst white = '#ffffff';\n\n\n\nexport const light = {\n  name: 'light',\n  text: black,\n  background: midGrey,\n  elements: white,\n  hover: lightGrey\n\n};\n\nexport const dark = {\n  name: 'dark',\n  text: white,\n  background: black,\n  elements: charcoal,\n  hover: grey\n};","import styled from 'styled-components';\n\nexport const Container = styled.header`\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    padding: 20px 30px;\n   \n    background: ${({ theme }) => theme.elements};\n    box-shadow: 0px 10px 18px rgba(0, 0, 0, 0.03);\n\n    @media (min-width: 1200px) {\n        padding: 30px 100px;\n    }\n\n    h1 {\n        font-size: 20px;\n        color: ${({ theme }) => theme.text};\n        font-weight bold;\n\n        @media (min-width: 600px) {\n            font-size: 25px;\n        }\n\n    }\n\n    button {\n        display: flex;\n        font-size: 15px;\n        justify-content: space-around;\n        align-items: center;\n        border: none;\n        outline: none;\n        cursor: pointer;\n        margin-right: 0;  \n        background: ${({ theme }) => theme.elements};\n\n        span {\n            display: none;\n\n            @media (min-width: 600px) {\n                display: block;\n                color: ${({ theme }) => theme.text};\n            }\n   \n            \n        }\n\n        svg {\n            color: ${({ theme }) => theme.text};\n\n            @media (min-width: 600px) { \n                margin-right: 10px;\n            }\n        }\n\n    }\n\n`;\n\n","import React, { useContext } from 'react';\nimport { Container } from './styles';\nimport { Link } from 'react-router-dom';\nimport { ThemeContext } from 'styled-components';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faMoon, faSun } from '@fortawesome/free-solid-svg-icons'\n\n\n\n\nconst Header = ( {toggleThemes} ) => {\n\n  const { name } = useContext(ThemeContext);\n\n  return (\n    \n     <Container>\n            <Link to='countries_info' style={{ textDecoration: 'none' }}>\n                <h1>Where in the world?</h1>\n            </Link>\n            <button onClick={toggleThemes}>\n               {name === 'light' ? (\n                        <>\n                            <FontAwesomeIcon icon={faSun} /> <span>Light Mode</span>\n\n                        </>\n                    ) : (\n                        <>\n                            <FontAwesomeIcon icon={faMoon} /> <span>Dark Mode</span>\n                        </>\n                )}\n            </button>\n\n     </Container>\n     \n );\n};\n\nexport default Header;","import styled from 'styled-components';\n\nexport const Container = styled.div`\n    background-color: ${({theme}) => theme.elements}; \n    display: flex;\n    flex-direction: column;\n    margin-bottom: 30px;\n    border-radius: 5px;\n    cursor: pointer;\n    box-shadow: 0px 10px 18px rgba(0, 0, 0, 0.03);\n    color: ${({ theme }) => theme.text};\n    height: 100%;\n\n    @media (min-width: 600px) {\n        max-width: 220px;\n    }\n\n    @media (min-width: 1200px) {\n        max-width: 285px;\n    }\n\n    a {\n        text-decoration: none;\n        color: ${({ theme }) => theme.text};\n    }\n\n    img {\n        width: 100%;\n        object-fit: cover;\n        flex: 1;\n\n        @media (min-width: 600px) {\n            height: 150px;\n        }\n    \n        @media (min-width: 1200px) {\n            height: 200px;\n        }\n\n        \n    }\n\n`;\n\nexport const Details = styled.div`\n    display: flex;\n    flex: 1;\n    flex-direction: column;\n    padding: 20px;\n\n    @media (min-width: 600px) {\n        padding: 15px;\n    }\n\n    h3 {\n        padding-bottom: 10px;\n    }\n\n    span {\n        margin: 4px 0;\n    }\n\n    strong {\n        margin-right: 5px;\n    }\n`;\n ","import React from 'react';\nimport { Container, Details } from './styles';\nimport { Link } from 'react-router-dom';\n\n\nconst Country = ({ country}) => {\n    \n\n    return (    \n        <Container>\n            <Link to={country.alpha3Code}>\n                <img src={country.flag} className=\"country__flag\" alt='flag' />   \n                <Details>\n                    <h3>{country.name}</h3>\n                    <span><strong>Population:</strong>{country.population}</span>\n                    <span><strong>Region:</strong>{country.region}</span>\n                    <span><strong>Capital:</strong>{country.capital}</span>\n                </Details> \n            </Link>          \n        </Container>\n      \n    );\n};\n\nexport default Country;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n    display: flex;\n    align-items: center;\n    width: 100%;\n    background-color: ${({theme}) => theme.elements};\n    color: ${({ theme }) => theme.text};\n    border: none;\n    border-radius: 5px;\n    overflow: hidden;\n    box-shadow: 0px 10px 18px rgba(0, 0, 0, 0.03);\n    position: relative;\n    margin-bottom: 30px;\n\n    @media (min-width: 600px) {\n        margin-bottom: 0;\n        flex: 0.4;\n    }\n\n    svg {\n        position: absolute;\n        color: ${({ theme }) => theme.text};\n        padding: 15px;\n    } \n\n    span {\n        position: absolute;\n        right: 1em;\n        top: 0;\n        bottom: 0;\n        line-height: 40px;\n        cursor: pointer\n    }\n    \n    \n`;\n\nexport const Input = styled.input`\n    background-color: ${({theme}) => theme.elements};\n    color: ${({ theme }) => theme.text};\n    border: 0;\n    padding: 15px 15px 15px 40px;\n    border-radius: 4px;\n    width: 100%; \n    outline: none;\n    background-color: ${({theme}) => theme.elements}; \n    \n    &:focus-within {\n        &::placeholder {\n           color: transparent;\n        }\n    }  \n\n`;","import React from 'react';\nimport { Container, Input } from './styles';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\n\n\nconst Search = ({input: keyword, onChange: setKeyword, onClick: clearInput }) => {\n    \n    return (\n        <Container>\n             <FontAwesomeIcon icon={faSearch} size='xs'  />\n             <Input\n              type='text'\n              placeholder='Search for a country...' \n              value={keyword}\n              onChange={(e) => setKeyword(e.target.value)} /> \n              <span onClick={(e) => clearInput(e.target.value)}>&times;</span>\n        </Container>\n\n\n    )\n};\n\nexport default Search;","import styled from 'styled-components';\n\nexport const Container = styled.div`\n    display: flex;\n    flex: 1;\n    align-items: center;\n    justify-content: center; \n    position: relative;\n    display: inline-block;\n\n    @media (min-width: 600px) {\n        flex: .4;\n    }\n\n    @media (min-width: 1200px) {\n        flex: .2;\n    }\n\n    button {\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n        background-color: ${({theme}) => theme.elements};\n        color: ${({ theme }) => theme.text};\n        border-radius: 5px;\n        border: none;\n        overflow: hidden;\n        outline: none;\n        cursor: pointer;\n        box-shadow: 0px 10px 18px rgba(0, 0, 0, 0.03);\n        width: 100%;\n        padding: 15px;\n    }\n`;\n\nexport const FilterList = styled.ul`\n        list-style: none;\n        padding: 5px 0;\n        width: 100%;\n        border: none;\n        position: absolute;\n        box-shadow: 0px 10px 18px rgba(0, 0, 0, 0.03);\n        margin-top: 1px;\n\n        button {\n            display: flex;\n            justify-content: space-between;\n            align-items: center;\n            background-color: ${({theme}) => theme.elements};\n            color: ${({ theme }) => theme.text};\n            border: none;\n            overflow: hidden;\n            outline: none;\n            cursor: pointer;\n            width: 100%;\n            padding: 15px;\n            border-radius: 0;\n            transition: all 0.3s ease 0s;    \n\n            &:hover {\n                background: ${({ theme }) => theme.hover};\n                \n            }\n        }\n`;\n","import React, { useState } from 'react';\nimport { Container, FilterList } from './styles';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faChevronDown } from '@fortawesome/free-solid-svg-icons'\n\n\nconst Filter = ( {filterByRegion} ) => {\n    \n    const [selectedRegion, setSelectedRegion] = useState('');\n    const [showDropdown, setShowDropdown] = useState(false);\n\n    const regions = ['All', 'Africa', 'Americas', 'Asia', 'Europe', 'Oceania'];\n\n\n    const toggleDropdown = () => {\n        setShowDropdown(!showDropdown);\n    };\n\n    const selectRegion = (region) => {\n        setSelectedRegion(region);\n        filterByRegion(region);\n        setShowDropdown(false);     \n    };\n\n  \n   return (\n       <Container>\n           <button type='button' onClick={toggleDropdown}>\n                        {selectedRegion !== '' ? (\n                            <span>{selectedRegion}</span>\n                        ) : (\n                            <span>Filter by Region</span>\n                        )}\n                        <FontAwesomeIcon icon={faChevronDown} size='xs' />\n            </button>\n            <FilterList style={{ display: (showDropdown ? 'block' : 'none') }}>                \n                    {regions.map((region) => (\n                        <li key={region}>\n                            <button type='button' onClick={() => selectRegion(region)}>\n                                <span\n                                    style={{\n                                        fontWeight:\n                                            selectedRegion === region && 'bold',\n                                    }}\n                                >\n                                        {region}\n                                </span>\n                            </button>\n                        </li>\n                    ))}\n            </FilterList>\n       </Container>\n   )\n};\n\nexport default Filter;","import styled from 'styled-components';\n\nexport const Container = styled.div`\n    background-color: ${(props) => props.theme.backgroundColor};\n    display: flex;\n    flex-direction: column;\n`;\n\nexport const Options = styled.div`\n    display: flex;\n    justify-content: space-between;\n    flex-wrap: wrap;\n    padding: 20px 30px;\n\n    @media (min-width: 1200px) {\n        flex-wrap: no-wrap;\n        padding: 50px 100px 20px 100px;\n    }\n        \n`;\n\n\nexport const Grid = styled.div`  \n    display: grid;\n    grid-column: 1;\n    grid-gap: 30px;\n    padding: 30px;\n\n    @media (min-width: 600px) {    \n        grid-template-columns: repeat(3, 1fr);\n    }\n\n    @media (min-width: 769px) {    \n        grid-template-columns: repeat(4, 1fr);\n    }\n\n    @media (min-width: 1200px) {\n        padding: 30px 100px;\n    }\n  \n`;\n   ","import styled from 'styled-components';\n\nexport const Container = styled.div`\n    color: ${({ theme }) => theme.text};\n    font-size: 90px;\n    text-indent: -9999em;\n    overflow: hidden;\n    width: 1em;\n    height: 1em;\n    border-radius: 50%;\n    margin: 72px auto;\n    position: relative;\n    -webkit-transform: translateZ(0);\n    -ms-transform: translateZ(0);\n    transform: translateZ(0);\n    -webkit-animation: load6 1.7s infinite ease, round 1.7s infinite ease;\n    animation: load6 1.7s infinite ease, round 1.7s infinite ease;\n\n    @-webkit-keyframes load6 {\n        0% {\n          box-shadow: 0 -0.83em 0 -0.4em, 0 -0.83em 0 -0.42em, 0 -0.83em 0 -0.44em, 0 -0.83em 0 -0.46em, 0 -0.83em 0 -0.477em;\n        }\n        5%,\n        95% {\n          box-shadow: 0 -0.83em 0 -0.4em, 0 -0.83em 0 -0.42em, 0 -0.83em 0 -0.44em, 0 -0.83em 0 -0.46em, 0 -0.83em 0 -0.477em;\n        }\n        10%,\n        59% {\n          box-shadow: 0 -0.83em 0 -0.4em, -0.087em -0.825em 0 -0.42em, -0.173em -0.812em 0 -0.44em, -0.256em -0.789em 0 -0.46em, -0.297em -0.775em 0 -0.477em;\n        }\n        20% {\n          box-shadow: 0 -0.83em 0 -0.4em, -0.338em -0.758em 0 -0.42em, -0.555em -0.617em 0 -0.44em, -0.671em -0.488em 0 -0.46em, -0.749em -0.34em 0 -0.477em;\n        }\n        38% {\n          box-shadow: 0 -0.83em 0 -0.4em, -0.377em -0.74em 0 -0.42em, -0.645em -0.522em 0 -0.44em, -0.775em -0.297em 0 -0.46em, -0.82em -0.09em 0 -0.477em;\n        }\n        100% {\n          box-shadow: 0 -0.83em 0 -0.4em, 0 -0.83em 0 -0.42em, 0 -0.83em 0 -0.44em, 0 -0.83em 0 -0.46em, 0 -0.83em 0 -0.477em;\n        }\n      }\n      @keyframes load6 {\n        0% {\n          box-shadow: 0 -0.83em 0 -0.4em, 0 -0.83em 0 -0.42em, 0 -0.83em 0 -0.44em, 0 -0.83em 0 -0.46em, 0 -0.83em 0 -0.477em;\n        }\n        5%,\n        95% {\n          box-shadow: 0 -0.83em 0 -0.4em, 0 -0.83em 0 -0.42em, 0 -0.83em 0 -0.44em, 0 -0.83em 0 -0.46em, 0 -0.83em 0 -0.477em;\n        }\n        10%,\n        59% {\n          box-shadow: 0 -0.83em 0 -0.4em, -0.087em -0.825em 0 -0.42em, -0.173em -0.812em 0 -0.44em, -0.256em -0.789em 0 -0.46em, -0.297em -0.775em 0 -0.477em;\n        }\n        20% {\n          box-shadow: 0 -0.83em 0 -0.4em, -0.338em -0.758em 0 -0.42em, -0.555em -0.617em 0 -0.44em, -0.671em -0.488em 0 -0.46em, -0.749em -0.34em 0 -0.477em;\n        }\n        38% {\n          box-shadow: 0 -0.83em 0 -0.4em, -0.377em -0.74em 0 -0.42em, -0.645em -0.522em 0 -0.44em, -0.775em -0.297em 0 -0.46em, -0.82em -0.09em 0 -0.477em;\n        }\n        100% {\n          box-shadow: 0 -0.83em 0 -0.4em, 0 -0.83em 0 -0.42em, 0 -0.83em 0 -0.44em, 0 -0.83em 0 -0.46em, 0 -0.83em 0 -0.477em;\n        }\n      }\n      @-webkit-keyframes round {\n        0% {\n          -webkit-transform: rotate(0deg);\n          transform: rotate(0deg);\n        }\n        100% {\n          -webkit-transform: rotate(360deg);\n          transform: rotate(360deg);\n        }\n      }\n      @keyframes round {\n        0% {\n          -webkit-transform: rotate(0deg);\n          transform: rotate(0deg);\n        }\n        100% {\n          -webkit-transform: rotate(360deg);\n          transform: rotate(360deg);\n        }\n      }\n      \n`;\n\n","import React from 'react';\nimport { Container } from './styles';\n\nconst Spinner = () => {\n    return (\n      <Container>Loading...</Container>\n    )\n};\n\nexport default Spinner;\n\n","import React from 'react';\nimport { useEffect, useState } from 'react';\nimport Country from '../Country/Country';\nimport Search from '../Search/Search';\nimport Filter from '../Filter/Filter';\nimport { Container, Options, Grid } from './styles';\nimport Spinner from '../Spinner/Spinner';\n\nconst Countries = () => {\n\n    const [input, setInput] = useState('');\n    const [countriesData, setCountriesData] = useState([]);\n    const [defaultCountriesData, setDefaultCountriesData] = useState([]);\n    const [loading, setLoading] = useState(true);\n    \n\n    const fetchCountries = async () => {\n        return await fetch('https://restcountries.eu/rest/v2/all')\n          .then(res => res.json())\n          .then(data => {\n            setLoading(false);  \n            setCountriesData(data);\n            setDefaultCountriesData(data);\n            setInput('');\n          })            \n    };\n\n    useEffect(() => {\n        fetchCountries();\n\n    }, []);\n\n    const loadCountriesByRegion = async (region) => {\n        if (region === 'All') {\n           return fetchCountries();\n        }\n\n        return await fetch(`https://restcountries.eu/rest/v2/region/${region}`)\n          .then(res => res.json())\n          .then(data => {\n            setCountriesData(data);\n            setInput('');\n          });       \n    }\n\n  \n    const updateInput = async (input) => {\n        const filtered = defaultCountriesData.filter(country => {\n            return country.name.toLowerCase().includes(input.toLowerCase())\n        })\n        \n        setInput(input);\n        setCountriesData(filtered); \n    };\n\n    const clearInput = async () => {\n        setInput('');\n        const resetted = defaultCountriesData;\n        setCountriesData(resetted);\n    };\n\n    \n    const card = <Grid>\n                        {!countriesData ? (\n                                <div>Something went wrong... Try again!</div>\n                            ) : (\n                                countriesData.map((country) => (\n                                <Country key={country.alpha3Code} country={country}/>\n                                                     \n                        )))}\n                </Grid>; \n\n    return (\n        <Container>\n            <Options>          \n                <Search input={input} onChange={updateInput} onClick={clearInput}/> \n                <Filter filterByRegion={loadCountriesByRegion} />\n            </Options> \n             { loading ? <Spinner /> : card }            \n        </Container>\n    );\n};\n\nexport default Countries;","import styled from 'styled-components';\n\nexport const Container = styled.div`\n   display: flex;\n   justify-content: center;\n   padding: 50px;\n   color: ${({ theme }) => theme.text};\n   flex-wrap: wrap;\n\n        @media (min-width: 600px) { \n            flex-wrap: no-wrap;\n            \n        } \n\n        @media (min-width: 1200px) { \n          padding: 30px 100px;\n          justify-content: space-between;\n\n        }  \n`;\n\nexport const Flag = styled.div`\n   display: flex;\n   flex-direction: column;\n\n   @media (min-width: 1200px) { \n       flex: 1;  \n   }\n   \n   img {\n        margin-top: 30px;\n        object-fit: cover;\n        max-width: 100%;\n        width: 350px;\n        height: 180px;\n        \n\n        @media (min-width: 600px) { \n            width: 720px;\n            height: 420px;\n            \n        }\n\n        @media (min-width: 1024px) { \n            width: 850px;\n            height: 600px;\n            \n        }\n        \n\n        @media (min-width: 1200px) { \n            width: 550px;\n            height: 350px;\n        } \n   }\n\n   button {\n        display: flex;\n        justify-content: space-around;\n        align-items: center;\n        background-color: ${({theme}) => theme.elements};\n        color: ${({ theme }) => theme.text};\n        border: none;\n        overflow: hidden;\n        outline: none;\n        cursor: pointer;\n        box-shadow: 0px 10px 18px rgba(0, 0, 0, 0.03);\n        padding: 10px;\n        width: 32%;\n        font-size: 12px;\n        border-radius: 4px;\n        transition: all 0.3s ease 0s;\n\n        &:hover {\n            background: ${({ theme }) => theme.hover};\n            \n        }\n\n        @media (min-width: 600px) { \n            width: 13%;\n            font-size: 15px;\n        }\n\n        @media (min-width: 1200px) { \n            width: 17%;\n        } \n\n\n   }\n\n`;\n\nexport const Details = styled.div`\n   display: flex;\n   flex: 1;\n   flex-direction: column;  \n   padding: 0;\n   margin-top: 30px;\n\n\n   @media (min-width: 600px) { \n     padding: 50px;   \n     font-size: 25px;\n   }\n\n   @media (min-width: 1200px) { \n      padding: 30px 10px; \n      font-size: 17px;\n   }   \n\n    \n`;\n\nexport const CountryInfo = styled.div`\n    margin-top: 10px;\n    display: grid;\n    grid-template-columns: repeat(2, 1fr);\n    grid-template-rows: repeat(4, 1fr);\n    column-gap: 10px;\n    row-gap: 10px;\n\n    @media (min-width: 600px) { \n        margin-top: 40px;   \n    }\n\n    strong {\n        margin-right: 5px;\n    }\n\n`;\n\nexport const Borders = styled.div`\n    margin-top: 40px;\n    display: flex;\n    flex-flow: row wrap;\n\n    @media (min-width: 600px) { \n        margin-top: 50px;   \n    }\n  \n\n    strong {\n        flex: 1 1 100%;\n        margin-bottom: 15px;\n    }\n\n    div {\n        display: flex;\n        justify-content: flex-start;\n        flex-wrap: wrap;\n   \n        a {\n            padding: 10px;\n            font-size: 17px;\n            border-radius: 5px;\n            margin: 5px 5px 5px 0;\n            background: ${({theme}) => theme.elements};\n            color: ${({ theme }) => theme.text};\n            text-decoration: none;\n            cursor: pointer;\n            box-shadow: 0px 10px 18px rgba(0, 0, 0, 0.03);\n            transition: all 0.3s ease 0s;\n\n            &:hover {\n                background: ${({ theme }) => theme.hover};\n                \n            }\n        }\n    }        \n                \n`;","import React, { useState, useEffect } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport { Container, Flag, Details, CountryInfo, Borders } from './styles'; \nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faArrowLeft } from '@fortawesome/free-solid-svg-icons'\nimport Spinner from '../Spinner/Spinner';\n\n\nconst CountryDetail = () => {\n    const [country, setCountry] = useState([]);\n    const [loading, setLoading] = useState(true);\n\n    const { alpha3Code } = useParams();\n\n    const loadCountry = async () => {\n\n        return await fetch(`https://restcountries.eu/rest/v2/alpha/${alpha3Code}`)\n            .then(res => res.json())\n            .then(data => {\n                setLoading(false);\n                setCountry(data);\n            })\n            .catch(err => console.log(err))        \n        \n    };\n\n    useEffect(() => {\n        loadCountry();\n\n    }, [alpha3Code]);\n\n\n    return (loading ? <Spinner /> : (\n            <Container>\n                <Flag>\n                    <Link to='countries_info' style={{ textDecoration: 'none' }}>\n                        <button type='button'>\n                            <FontAwesomeIcon icon={faArrowLeft} />\n                            Back\n                        </button>\n                    </Link>\n                    <img src={country?.flag} alt='flag'/>\n                </Flag>\n                <Details>\n                    <h3><strong>{country?.name}</strong></h3>\n                    <CountryInfo>\n                        <span><strong>Native Name: </strong>{country?.nativeName}</span>\n                        <span><strong>Capital: </strong>{country?.capital}</span>\n                        <span><strong>Region: </strong>{country?.region}</span>\n                        <span><strong>Subregion: </strong>{country?.subregion}</span>\n                        <span><strong>Population: </strong>{country?.population}</span>\n                        <span><strong>Top Level Domain: </strong>{country?.topLevelDomain}</span>\n                        <span><strong>Languages: </strong>{country?.languages?.map(lang => lang.name).join(', ')}</span>\n                        <span><strong>Currencies: </strong>{country?.currencies?.map(({ symbol }) => symbol).join(', ')}</span>\n                    </CountryInfo>\n                     { country?.borders && country?.borders.length > 0 ? (\n                        <Borders>\n                             <strong>Border Countries:</strong>\n                             <div>\n                                { country?.borders.map(border => (\n                                    <Link to={border} key={border}>\n                                        {border}        \n                                    </Link>                             \n                                ))}\n                             </div>\n                        </Borders> \n                    ) : <div></div> }             \n                </Details>\n            </Container>\n    ));\n};\n\nexport default CountryDetail;","import React, { useState } from 'react';\nimport {\n  BrowserRouter,\n  Switch,\n  Route\n} from 'react-router-dom';\nimport { ThemeProvider } from 'styled-components';\nimport { GlobalStyles } from './global';\nimport { light, dark } from './themes';\nimport Header from './components/Header/Header';\nimport Countries from './components/Countries/Countries';\nimport CountryDetail from './components/CountryDetail/CountryDetail';\n\n\nfunction App() {\n\n  const stored = localStorage.getItem('isDarkMode');\n  const [isDarkMode, setIsDarkMode] = useState(\n    stored === 'true' ? true : false\n  );\n\n  const toggleTheme = () => {\n    setIsDarkMode(!isDarkMode);\n    localStorage.setItem('isDarkMode', !isDarkMode);\n  };\n\n  return (\n      <ThemeProvider theme={isDarkMode ? dark : light}>\n          <GlobalStyles />\n          <BrowserRouter>\n          <Header toggleThemes={toggleTheme}/> \n              <Switch>\n                  <Route exact path='/countries_info' component={Countries} />        \n                  <Route path='/:alpha3Code' component={CountryDetail} />\n              </Switch>\n          </BrowserRouter>\n      </ThemeProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}